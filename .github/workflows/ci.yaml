name: Main

on:
  push:
    paths:
      - .github/workflows/ci.yaml
      - docker/**
      - src/**
      - test/**

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime: ["linux-x64", "linux-musl-x64"]
        targetFramework: ["6.0", "8.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: |
          docker build --build-arg RUNTIME=${{ matrix.runtime }} --build-arg TARGET_FRAMEWORK=${{ matrix.targetFramework }} --file docker/Dockerfile --output ./release --target output .
      - name: Install bats
        run: |
          npm install --global bats
      - name: Test
        env:
          RUNTIME: ${{ matrix.runtime }}
          RUNTIME_IMAGE_SUFFIX: ${{ matrix.runtime == 'linux-musl-x64' && '-alpine' || '' }}
          TARGET_FRAMEWORK: ${{ matrix.targetFramework }}
        run: |
          docker compose build --build-arg RUNTIME=$RUNTIME --build-arg RUNTIME_IMAGE_SUFFIX=$RUNTIME_IMAGE_SUFFIX --build-arg TARGET_FRAMEWORK=$TARGET_FRAMEWORK
          bats tests.bats
        working-directory: test
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.targetFramework }}-${{ matrix.runtime }}
          path: |
            ./release/healthchecker
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: releases
      - name: Prepare assets
        run: |
          mkdir --parents ../assets
          for r in *; do
            cp $r/healthchecker ../assets/healthchecker-net${r/./}
          done
        working-directory: releases
      - name: Checksum
        run: |
          sha256sum healthchecker* > healthchecker.sha256sum
        working-directory: assets
      - name: Generate notes
        run: |
          echo -e "# Release notes\n" >> $GITHUB_STEP_SUMMARY

          cat <<EOF | tee ../USAGE.md

          ## Usage

          See [readme](https://github.com/mikaelelkiaer/dotnet-healthchecker) for usage details.

          EOF

          for r in *; do
            CHECKSUM=$(awk "/${r}/ {print \$1}" < ../assets/healthchecker.sha256sum)
            cat <<-EOF | tee --append ../USAGE.md

            ### .NET ${r/healthchecker-/}

            \`\`\`Dockerfile
            ADD --checksum=sha256:${CHECKSUM} https://github.com/mikaelelkiaer/dotnet-healthchecker/releases/download/${{ github.ref_name }}/${r} /usr/local/bin/healthchecker
            RUN chmod +rx /usr/local/bin/healthchecker
            HEALTHCHECK CMD healthchecker
            \`\`\`
          EOF
          done

          cat ../USAGE.md >> $GITHUB_STEP_SUMMARY
        working-directory: releases
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
          LATEST: ${{ github.ref_type == 'tag' && 'true' || 'false' }}
          PRERELEASE: ${{ github.ref_type == 'tag' && 'false' || 'true' }}
        if: github.ref_type == 'tag' || github.ref_name == 'main'
        run: |
          if [ -n $PRERELEASE ]; then
            gh release view ${{ github.ref_name }} && gh release delete ${{ github.ref_name }} || true
          fi
          gh release create ${{ github.ref_name }} --draft=true --generate-notes --latest=${LATEST} --pre-release=${PRERELEASE} $(ls assets/*)
          gh release view  --json body --jq '.body' > NOTES.md
          (<USAGE.md) >> NOTES.md
          gh release edit ${{ github.ref_name }} --draft=false --notes-file NOTES.md
